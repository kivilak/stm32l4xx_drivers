
stm32l4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006a4  0800018c  0800018c  0000118c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000830  08000838  00001838  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000830  08000830  00001838  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000830  08000830  00001838  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000830  08000838  00001838  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000830  08000830  00001830  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000834  08000834  00001834  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001838  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00001838  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00001838  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a9f  00000000  00000000  00001862  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002ac  00000000  00000000  00002301  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  000025b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000085  00000000  00000000  00002670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001404  00000000  00000000  000026f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f3f  00000000  00000000  00003af9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000055ec  00000000  00000000  00004a38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000a024  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  0000a068  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000067  00000000  00000000  0000a2b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800018c <__do_global_dtors_aux>:
 800018c:	b510      	push	{r4, lr}
 800018e:	4c05      	ldr	r4, [pc, #20]	@ (80001a4 <__do_global_dtors_aux+0x18>)
 8000190:	7823      	ldrb	r3, [r4, #0]
 8000192:	b933      	cbnz	r3, 80001a2 <__do_global_dtors_aux+0x16>
 8000194:	4b04      	ldr	r3, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x1c>)
 8000196:	b113      	cbz	r3, 800019e <__do_global_dtors_aux+0x12>
 8000198:	4804      	ldr	r0, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x20>)
 800019a:	f3af 8000 	nop.w
 800019e:	2301      	movs	r3, #1
 80001a0:	7023      	strb	r3, [r4, #0]
 80001a2:	bd10      	pop	{r4, pc}
 80001a4:	20000000 	.word	0x20000000
 80001a8:	00000000 	.word	0x00000000
 80001ac:	08000818 	.word	0x08000818

080001b0 <frame_dummy>:
 80001b0:	b508      	push	{r3, lr}
 80001b2:	4b03      	ldr	r3, [pc, #12]	@ (80001c0 <frame_dummy+0x10>)
 80001b4:	b11b      	cbz	r3, 80001be <frame_dummy+0xe>
 80001b6:	4903      	ldr	r1, [pc, #12]	@ (80001c4 <frame_dummy+0x14>)
 80001b8:	4803      	ldr	r0, [pc, #12]	@ (80001c8 <frame_dummy+0x18>)
 80001ba:	f3af 8000 	nop.w
 80001be:	bd08      	pop	{r3, pc}
 80001c0:	00000000 	.word	0x00000000
 80001c4:	20000004 	.word	0x20000004
 80001c8:	08000818 	.word	0x08000818

080001cc <GPIO_PeriClockControl>:
 *
 * @retrun			- none
 *
 * @Note			- none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t ENorDI) {
 80001cc:	b480      	push	{r7}
 80001ce:	b083      	sub	sp, #12
 80001d0:	af00      	add	r7, sp, #0
 80001d2:	6078      	str	r0, [r7, #4]
 80001d4:	460b      	mov	r3, r1
 80001d6:	70fb      	strb	r3, [r7, #3]
	if(ENorDI == ENABLE) {
 80001d8:	78fb      	ldrb	r3, [r7, #3]
 80001da:	2b01      	cmp	r3, #1
 80001dc:	d157      	bne.n	800028e <GPIO_PeriClockControl+0xc2>
		if(pGPIOx == GPIOA) {
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80001e4:	d106      	bne.n	80001f4 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80001e6:	4b58      	ldr	r3, [pc, #352]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80001e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80001ea:	4a57      	ldr	r2, [pc, #348]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80001ec:	f043 0301 	orr.w	r3, r3, #1
 80001f0:	64d3      	str	r3, [r2, #76]	@ 0x4c
			GPIOG_PCLK_DI();
		} else if(pGPIOx == GPIOH) {
			GPIOH_PCLK_DI();
		}
	}
}
 80001f2:	e0a3      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOB) {
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	4a55      	ldr	r2, [pc, #340]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80001f8:	4293      	cmp	r3, r2
 80001fa:	d106      	bne.n	800020a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80001fc:	4b52      	ldr	r3, [pc, #328]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80001fe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000200:	4a51      	ldr	r2, [pc, #324]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000202:	f043 0302 	orr.w	r3, r3, #2
 8000206:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000208:	e098      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOC) {
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	4a50      	ldr	r2, [pc, #320]	@ (8000350 <GPIO_PeriClockControl+0x184>)
 800020e:	4293      	cmp	r3, r2
 8000210:	d106      	bne.n	8000220 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000212:	4b4d      	ldr	r3, [pc, #308]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000214:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000216:	4a4c      	ldr	r2, [pc, #304]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000218:	f043 0304 	orr.w	r3, r3, #4
 800021c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800021e:	e08d      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOD) {
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	4a4c      	ldr	r2, [pc, #304]	@ (8000354 <GPIO_PeriClockControl+0x188>)
 8000224:	4293      	cmp	r3, r2
 8000226:	d106      	bne.n	8000236 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000228:	4b47      	ldr	r3, [pc, #284]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 800022a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800022c:	4a46      	ldr	r2, [pc, #280]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 800022e:	f043 0308 	orr.w	r3, r3, #8
 8000232:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000234:	e082      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOE) {
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	4a47      	ldr	r2, [pc, #284]	@ (8000358 <GPIO_PeriClockControl+0x18c>)
 800023a:	4293      	cmp	r3, r2
 800023c:	d106      	bne.n	800024c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800023e:	4b42      	ldr	r3, [pc, #264]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000240:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000242:	4a41      	ldr	r2, [pc, #260]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000244:	f043 0310 	orr.w	r3, r3, #16
 8000248:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800024a:	e077      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOF) {
 800024c:	687b      	ldr	r3, [r7, #4]
 800024e:	4a43      	ldr	r2, [pc, #268]	@ (800035c <GPIO_PeriClockControl+0x190>)
 8000250:	4293      	cmp	r3, r2
 8000252:	d106      	bne.n	8000262 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000254:	4b3c      	ldr	r3, [pc, #240]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000256:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000258:	4a3b      	ldr	r2, [pc, #236]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 800025a:	f043 0320 	orr.w	r3, r3, #32
 800025e:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000260:	e06c      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOG) {
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	4a3e      	ldr	r2, [pc, #248]	@ (8000360 <GPIO_PeriClockControl+0x194>)
 8000266:	4293      	cmp	r3, r2
 8000268:	d106      	bne.n	8000278 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800026a:	4b37      	ldr	r3, [pc, #220]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 800026c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800026e:	4a36      	ldr	r2, [pc, #216]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000270:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000274:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000276:	e061      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOH) {
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	4a3a      	ldr	r2, [pc, #232]	@ (8000364 <GPIO_PeriClockControl+0x198>)
 800027c:	4293      	cmp	r3, r2
 800027e:	d15d      	bne.n	800033c <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 8000280:	4b31      	ldr	r3, [pc, #196]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000282:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000284:	4a30      	ldr	r2, [pc, #192]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000286:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800028a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800028c:	e056      	b.n	800033c <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA) {
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8000294:	d106      	bne.n	80002a4 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 8000296:	4b2c      	ldr	r3, [pc, #176]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000298:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800029a:	4a2b      	ldr	r2, [pc, #172]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 800029c:	f023 0301 	bic.w	r3, r3, #1
 80002a0:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002a2:	e04b      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOB) {
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	4a29      	ldr	r2, [pc, #164]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002a8:	4293      	cmp	r3, r2
 80002aa:	d106      	bne.n	80002ba <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80002ac:	4b26      	ldr	r3, [pc, #152]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80002ae:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002b0:	4a25      	ldr	r2, [pc, #148]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80002b2:	f023 0302 	bic.w	r3, r3, #2
 80002b6:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002b8:	e040      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOC) {
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	4a24      	ldr	r2, [pc, #144]	@ (8000350 <GPIO_PeriClockControl+0x184>)
 80002be:	4293      	cmp	r3, r2
 80002c0:	d106      	bne.n	80002d0 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80002c2:	4b21      	ldr	r3, [pc, #132]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80002c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002c6:	4a20      	ldr	r2, [pc, #128]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80002c8:	f023 0304 	bic.w	r3, r3, #4
 80002cc:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002ce:	e035      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOD) {
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	4a20      	ldr	r2, [pc, #128]	@ (8000354 <GPIO_PeriClockControl+0x188>)
 80002d4:	4293      	cmp	r3, r2
 80002d6:	d106      	bne.n	80002e6 <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 80002d8:	4b1b      	ldr	r3, [pc, #108]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80002da:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002dc:	4a1a      	ldr	r2, [pc, #104]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80002de:	f023 0308 	bic.w	r3, r3, #8
 80002e2:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002e4:	e02a      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOE) {
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4a1b      	ldr	r2, [pc, #108]	@ (8000358 <GPIO_PeriClockControl+0x18c>)
 80002ea:	4293      	cmp	r3, r2
 80002ec:	d106      	bne.n	80002fc <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 80002ee:	4b16      	ldr	r3, [pc, #88]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80002f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002f2:	4a15      	ldr	r2, [pc, #84]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 80002f4:	f023 0310 	bic.w	r3, r3, #16
 80002f8:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002fa:	e01f      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOF) {
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	4a17      	ldr	r2, [pc, #92]	@ (800035c <GPIO_PeriClockControl+0x190>)
 8000300:	4293      	cmp	r3, r2
 8000302:	d106      	bne.n	8000312 <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 8000304:	4b10      	ldr	r3, [pc, #64]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000306:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000308:	4a0f      	ldr	r2, [pc, #60]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 800030a:	f023 0320 	bic.w	r3, r3, #32
 800030e:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000310:	e014      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOG) {
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a12      	ldr	r2, [pc, #72]	@ (8000360 <GPIO_PeriClockControl+0x194>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d106      	bne.n	8000328 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 800031a:	4b0b      	ldr	r3, [pc, #44]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 800031c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800031e:	4a0a      	ldr	r2, [pc, #40]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000320:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000324:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000326:	e009      	b.n	800033c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOH) {
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4a0e      	ldr	r2, [pc, #56]	@ (8000364 <GPIO_PeriClockControl+0x198>)
 800032c:	4293      	cmp	r3, r2
 800032e:	d105      	bne.n	800033c <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000330:	4b05      	ldr	r3, [pc, #20]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000332:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000334:	4a04      	ldr	r2, [pc, #16]	@ (8000348 <GPIO_PeriClockControl+0x17c>)
 8000336:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800033a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800033c:	bf00      	nop
 800033e:	370c      	adds	r7, #12
 8000340:	46bd      	mov	sp, r7
 8000342:	bc80      	pop	{r7}
 8000344:	4770      	bx	lr
 8000346:	bf00      	nop
 8000348:	40021000 	.word	0x40021000
 800034c:	48000400 	.word	0x48000400
 8000350:	48000800 	.word	0x48000800
 8000354:	48000c00 	.word	0x48000c00
 8000358:	48001000 	.word	0x48001000
 800035c:	48001400 	.word	0x48001400
 8000360:	48001800 	.word	0x48001800
 8000364:	48001c00 	.word	0x48001c00

08000368 <GPIO_Init>:
 *
 * @retrun			- none
 *
 * @Note			- none
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 8000368:	b480      	push	{r7}
 800036a:	b087      	sub	sp, #28
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; //temp. register
 8000370:	2300      	movs	r3, #0
 8000372:	617b      	str	r3, [r7, #20]

	//1. configure the mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	795b      	ldrb	r3, [r3, #5]
 8000378:	2b03      	cmp	r3, #3
 800037a:	d820      	bhi.n	80003be <GPIO_Init+0x56>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // each pin have 2bit there for 2bit shifting needed
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	795b      	ldrb	r3, [r3, #5]
 8000380:	461a      	mov	r2, r3
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	791b      	ldrb	r3, [r3, #4]
 8000386:	005b      	lsls	r3, r3, #1
 8000388:	fa02 f303 	lsl.w	r3, r2, r3
 800038c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));		//clearing
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	681a      	ldr	r2, [r3, #0]
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	791b      	ldrb	r3, [r3, #4]
 8000398:	005b      	lsls	r3, r3, #1
 800039a:	2103      	movs	r1, #3
 800039c:	fa01 f303 	lsl.w	r3, r1, r3
 80003a0:	43db      	mvns	r3, r3
 80003a2:	4619      	mov	r1, r3
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	400a      	ands	r2, r1
 80003aa:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;		//setting
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	6819      	ldr	r1, [r3, #0]
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	697a      	ldr	r2, [r7, #20]
 80003b8:	430a      	orrs	r2, r1
 80003ba:	601a      	str	r2, [r3, #0]
 80003bc:	e0bf      	b.n	800053e <GPIO_Init+0x1d6>
	} else {
		// interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <=  GPIO_MODE_IT_FT) {
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	795b      	ldrb	r3, [r3, #5]
 80003c2:	2b04      	cmp	r3, #4
 80003c4:	d817      	bhi.n	80003f6 <GPIO_Init+0x8e>
			//configure falling trigger register
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c6:	4b47      	ldr	r3, [pc, #284]	@ (80004e4 <GPIO_Init+0x17c>)
 80003c8:	68db      	ldr	r3, [r3, #12]
 80003ca:	687a      	ldr	r2, [r7, #4]
 80003cc:	7912      	ldrb	r2, [r2, #4]
 80003ce:	4611      	mov	r1, r2
 80003d0:	2201      	movs	r2, #1
 80003d2:	408a      	lsls	r2, r1
 80003d4:	4611      	mov	r1, r2
 80003d6:	4a43      	ldr	r2, [pc, #268]	@ (80004e4 <GPIO_Init+0x17c>)
 80003d8:	430b      	orrs	r3, r1
 80003da:	60d3      	str	r3, [r2, #12]
			//clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003dc:	4b41      	ldr	r3, [pc, #260]	@ (80004e4 <GPIO_Init+0x17c>)
 80003de:	689b      	ldr	r3, [r3, #8]
 80003e0:	687a      	ldr	r2, [r7, #4]
 80003e2:	7912      	ldrb	r2, [r2, #4]
 80003e4:	4611      	mov	r1, r2
 80003e6:	2201      	movs	r2, #1
 80003e8:	408a      	lsls	r2, r1
 80003ea:	43d2      	mvns	r2, r2
 80003ec:	4611      	mov	r1, r2
 80003ee:	4a3d      	ldr	r2, [pc, #244]	@ (80004e4 <GPIO_Init+0x17c>)
 80003f0:	400b      	ands	r3, r1
 80003f2:	6093      	str	r3, [r2, #8]
 80003f4:	e035      	b.n	8000462 <GPIO_Init+0xfa>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT) {
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	795b      	ldrb	r3, [r3, #5]
 80003fa:	2b05      	cmp	r3, #5
 80003fc:	d817      	bhi.n	800042e <GPIO_Init+0xc6>
			//configure rising trigger register
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003fe:	4b39      	ldr	r3, [pc, #228]	@ (80004e4 <GPIO_Init+0x17c>)
 8000400:	689b      	ldr	r3, [r3, #8]
 8000402:	687a      	ldr	r2, [r7, #4]
 8000404:	7912      	ldrb	r2, [r2, #4]
 8000406:	4611      	mov	r1, r2
 8000408:	2201      	movs	r2, #1
 800040a:	408a      	lsls	r2, r1
 800040c:	4611      	mov	r1, r2
 800040e:	4a35      	ldr	r2, [pc, #212]	@ (80004e4 <GPIO_Init+0x17c>)
 8000410:	430b      	orrs	r3, r1
 8000412:	6093      	str	r3, [r2, #8]
			//clear the corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000414:	4b33      	ldr	r3, [pc, #204]	@ (80004e4 <GPIO_Init+0x17c>)
 8000416:	68db      	ldr	r3, [r3, #12]
 8000418:	687a      	ldr	r2, [r7, #4]
 800041a:	7912      	ldrb	r2, [r2, #4]
 800041c:	4611      	mov	r1, r2
 800041e:	2201      	movs	r2, #1
 8000420:	408a      	lsls	r2, r1
 8000422:	43d2      	mvns	r2, r2
 8000424:	4611      	mov	r1, r2
 8000426:	4a2f      	ldr	r2, [pc, #188]	@ (80004e4 <GPIO_Init+0x17c>)
 8000428:	400b      	ands	r3, r1
 800042a:	60d3      	str	r3, [r2, #12]
 800042c:	e019      	b.n	8000462 <GPIO_Init+0xfa>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RFT) {
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	795b      	ldrb	r3, [r3, #5]
 8000432:	2b06      	cmp	r3, #6
 8000434:	d815      	bhi.n	8000462 <GPIO_Init+0xfa>
			//configure both FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000436:	4b2b      	ldr	r3, [pc, #172]	@ (80004e4 <GPIO_Init+0x17c>)
 8000438:	68db      	ldr	r3, [r3, #12]
 800043a:	687a      	ldr	r2, [r7, #4]
 800043c:	7912      	ldrb	r2, [r2, #4]
 800043e:	4611      	mov	r1, r2
 8000440:	2201      	movs	r2, #1
 8000442:	408a      	lsls	r2, r1
 8000444:	4611      	mov	r1, r2
 8000446:	4a27      	ldr	r2, [pc, #156]	@ (80004e4 <GPIO_Init+0x17c>)
 8000448:	430b      	orrs	r3, r1
 800044a:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800044c:	4b25      	ldr	r3, [pc, #148]	@ (80004e4 <GPIO_Init+0x17c>)
 800044e:	689b      	ldr	r3, [r3, #8]
 8000450:	687a      	ldr	r2, [r7, #4]
 8000452:	7912      	ldrb	r2, [r2, #4]
 8000454:	4611      	mov	r1, r2
 8000456:	2201      	movs	r2, #1
 8000458:	408a      	lsls	r2, r1
 800045a:	4611      	mov	r1, r2
 800045c:	4a21      	ldr	r2, [pc, #132]	@ (80004e4 <GPIO_Init+0x17c>)
 800045e:	430b      	orrs	r3, r1
 8000460:	6093      	str	r3, [r2, #8]
		}

		//configure the GPIO port selection in SYSCFG_EXTICR
			uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	791b      	ldrb	r3, [r3, #4]
 8000466:	089b      	lsrs	r3, r3, #2
 8000468:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	791b      	ldrb	r3, [r3, #4]
 800046e:	f003 0303 	and.w	r3, r3, #3
 8000472:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode =  GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800047c:	d042      	beq.n	8000504 <GPIO_Init+0x19c>
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	4a19      	ldr	r2, [pc, #100]	@ (80004e8 <GPIO_Init+0x180>)
 8000484:	4293      	cmp	r3, r2
 8000486:	d02b      	beq.n	80004e0 <GPIO_Init+0x178>
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	4a17      	ldr	r2, [pc, #92]	@ (80004ec <GPIO_Init+0x184>)
 800048e:	4293      	cmp	r3, r2
 8000490:	d024      	beq.n	80004dc <GPIO_Init+0x174>
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	4a16      	ldr	r2, [pc, #88]	@ (80004f0 <GPIO_Init+0x188>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d01d      	beq.n	80004d8 <GPIO_Init+0x170>
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	4a14      	ldr	r2, [pc, #80]	@ (80004f4 <GPIO_Init+0x18c>)
 80004a2:	4293      	cmp	r3, r2
 80004a4:	d016      	beq.n	80004d4 <GPIO_Init+0x16c>
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	4a13      	ldr	r2, [pc, #76]	@ (80004f8 <GPIO_Init+0x190>)
 80004ac:	4293      	cmp	r3, r2
 80004ae:	d00f      	beq.n	80004d0 <GPIO_Init+0x168>
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	4a11      	ldr	r2, [pc, #68]	@ (80004fc <GPIO_Init+0x194>)
 80004b6:	4293      	cmp	r3, r2
 80004b8:	d008      	beq.n	80004cc <GPIO_Init+0x164>
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	4a10      	ldr	r2, [pc, #64]	@ (8000500 <GPIO_Init+0x198>)
 80004c0:	4293      	cmp	r3, r2
 80004c2:	d101      	bne.n	80004c8 <GPIO_Init+0x160>
 80004c4:	2307      	movs	r3, #7
 80004c6:	e01e      	b.n	8000506 <GPIO_Init+0x19e>
 80004c8:	2300      	movs	r3, #0
 80004ca:	e01c      	b.n	8000506 <GPIO_Init+0x19e>
 80004cc:	2306      	movs	r3, #6
 80004ce:	e01a      	b.n	8000506 <GPIO_Init+0x19e>
 80004d0:	2305      	movs	r3, #5
 80004d2:	e018      	b.n	8000506 <GPIO_Init+0x19e>
 80004d4:	2304      	movs	r3, #4
 80004d6:	e016      	b.n	8000506 <GPIO_Init+0x19e>
 80004d8:	2303      	movs	r3, #3
 80004da:	e014      	b.n	8000506 <GPIO_Init+0x19e>
 80004dc:	2302      	movs	r3, #2
 80004de:	e012      	b.n	8000506 <GPIO_Init+0x19e>
 80004e0:	2301      	movs	r3, #1
 80004e2:	e010      	b.n	8000506 <GPIO_Init+0x19e>
 80004e4:	40010400 	.word	0x40010400
 80004e8:	48000400 	.word	0x48000400
 80004ec:	48000800 	.word	0x48000800
 80004f0:	48000c00 	.word	0x48000c00
 80004f4:	48001000 	.word	0x48001000
 80004f8:	48001400 	.word	0x48001400
 80004fc:	48001800 	.word	0x48001800
 8000500:	48001c00 	.word	0x48001c00
 8000504:	2300      	movs	r3, #0
 8000506:	747b      	strb	r3, [r7, #17]

			SYSCFG_PCLK_EN();
 8000508:	4b5c      	ldr	r3, [pc, #368]	@ (800067c <GPIO_Init+0x314>)
 800050a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800050c:	4a5b      	ldr	r2, [pc, #364]	@ (800067c <GPIO_Init+0x314>)
 800050e:	f043 0301 	orr.w	r3, r3, #1
 8000512:	6613      	str	r3, [r2, #96]	@ 0x60
			SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000514:	7c7a      	ldrb	r2, [r7, #17]
 8000516:	7cbb      	ldrb	r3, [r7, #18]
 8000518:	009b      	lsls	r3, r3, #2
 800051a:	fa02 f103 	lsl.w	r1, r2, r3
 800051e:	4a58      	ldr	r2, [pc, #352]	@ (8000680 <GPIO_Init+0x318>)
 8000520:	7cfb      	ldrb	r3, [r7, #19]
 8000522:	3302      	adds	r3, #2
 8000524:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000528:	4b56      	ldr	r3, [pc, #344]	@ (8000684 <GPIO_Init+0x31c>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	687a      	ldr	r2, [r7, #4]
 800052e:	7912      	ldrb	r2, [r2, #4]
 8000530:	4611      	mov	r1, r2
 8000532:	2201      	movs	r2, #1
 8000534:	408a      	lsls	r2, r1
 8000536:	4611      	mov	r1, r2
 8000538:	4a52      	ldr	r2, [pc, #328]	@ (8000684 <GPIO_Init+0x31c>)
 800053a:	430b      	orrs	r3, r1
 800053c:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 800053e:	2300      	movs	r3, #0
 8000540:	617b      	str	r3, [r7, #20]

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	799b      	ldrb	r3, [r3, #6]
 8000546:	461a      	mov	r2, r3
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	791b      	ldrb	r3, [r3, #4]
 800054c:	005b      	lsls	r3, r3, #1
 800054e:	fa02 f303 	lsl.w	r3, r2, r3
 8000552:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	689a      	ldr	r2, [r3, #8]
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	791b      	ldrb	r3, [r3, #4]
 800055e:	4619      	mov	r1, r3
 8000560:	2303      	movs	r3, #3
 8000562:	408b      	lsls	r3, r1
 8000564:	43db      	mvns	r3, r3
 8000566:	4619      	mov	r1, r3
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	400a      	ands	r2, r1
 800056e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	6899      	ldr	r1, [r3, #8]
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	697a      	ldr	r2, [r7, #20]
 800057c:	430a      	orrs	r2, r1
 800057e:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000580:	2300      	movs	r3, #0
 8000582:	617b      	str	r3, [r7, #20]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	79db      	ldrb	r3, [r3, #7]
 8000588:	461a      	mov	r2, r3
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	791b      	ldrb	r3, [r3, #4]
 800058e:	005b      	lsls	r3, r3, #1
 8000590:	fa02 f303 	lsl.w	r3, r2, r3
 8000594:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	68da      	ldr	r2, [r3, #12]
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	4619      	mov	r1, r3
 80005a2:	2303      	movs	r3, #3
 80005a4:	408b      	lsls	r3, r1
 80005a6:	43db      	mvns	r3, r3
 80005a8:	4619      	mov	r1, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	400a      	ands	r2, r1
 80005b0:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	68d9      	ldr	r1, [r3, #12]
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	697a      	ldr	r2, [r7, #20]
 80005be:	430a      	orrs	r2, r1
 80005c0:	60da      	str	r2, [r3, #12]

	temp = 0;
 80005c2:	2300      	movs	r3, #0
 80005c4:	617b      	str	r3, [r7, #20]

	//4. configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	7a1b      	ldrb	r3, [r3, #8]
 80005ca:	461a      	mov	r2, r3
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	791b      	ldrb	r3, [r3, #4]
 80005d0:	fa02 f303 	lsl.w	r3, r2, r3
 80005d4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	685a      	ldr	r2, [r3, #4]
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	791b      	ldrb	r3, [r3, #4]
 80005e0:	4619      	mov	r1, r3
 80005e2:	2301      	movs	r3, #1
 80005e4:	408b      	lsls	r3, r1
 80005e6:	43db      	mvns	r3, r3
 80005e8:	4619      	mov	r1, r3
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	400a      	ands	r2, r1
 80005f0:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	6859      	ldr	r1, [r3, #4]
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	697a      	ldr	r2, [r7, #20]
 80005fe:	430a      	orrs	r2, r1
 8000600:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000602:	2300      	movs	r3, #0
 8000604:	617b      	str	r3, [r7, #20]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	795b      	ldrb	r3, [r3, #5]
 800060a:	2b02      	cmp	r3, #2
 800060c:	d131      	bne.n	8000672 <GPIO_Init+0x30a>
		//configure the alt function registers
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8; 	//get the pin in AFRL or AFRH (0, 1)
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	791b      	ldrb	r3, [r3, #4]
 8000612:	08db      	lsrs	r3, r3, #3
 8000614:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	791b      	ldrb	r3, [r3, #4]
 800061a:	f003 0307 	and.w	r3, r3, #7
 800061e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << (4 * temp2));
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	7c3a      	ldrb	r2, [r7, #16]
 8000626:	3208      	adds	r2, #8
 8000628:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800062c:	7bfb      	ldrb	r3, [r7, #15]
 800062e:	009b      	lsls	r3, r3, #2
 8000630:	220f      	movs	r2, #15
 8000632:	fa02 f303 	lsl.w	r3, r2, r3
 8000636:	43db      	mvns	r3, r3
 8000638:	4618      	mov	r0, r3
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	7c3a      	ldrb	r2, [r7, #16]
 8000640:	4001      	ands	r1, r0
 8000642:	3208      	adds	r2, #8
 8000644:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	7c3a      	ldrb	r2, [r7, #16]
 800064e:	3208      	adds	r2, #8
 8000650:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	7a5b      	ldrb	r3, [r3, #9]
 8000658:	461a      	mov	r2, r3
 800065a:	7bfb      	ldrb	r3, [r7, #15]
 800065c:	009b      	lsls	r3, r3, #2
 800065e:	fa02 f303 	lsl.w	r3, r2, r3
 8000662:	4618      	mov	r0, r3
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	7c3a      	ldrb	r2, [r7, #16]
 800066a:	4301      	orrs	r1, r0
 800066c:	3208      	adds	r2, #8
 800066e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000672:	bf00      	nop
 8000674:	371c      	adds	r7, #28
 8000676:	46bd      	mov	sp, r7
 8000678:	bc80      	pop	{r7}
 800067a:	4770      	bx	lr
 800067c:	40021000 	.word	0x40021000
 8000680:	40010000 	.word	0x40010000
 8000684:	40010400 	.word	0x40010400

08000688 <GPIO_ReadFromInputPin>:
 *
 * @retrun			- 0 or 1
 *
 * @Note			- none
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 8000688:	b480      	push	{r7}
 800068a:	b085      	sub	sp, #20
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]
 8000690:	460b      	mov	r3, r1
 8000692:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t) ((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	691a      	ldr	r2, [r3, #16]
 8000698:	78fb      	ldrb	r3, [r7, #3]
 800069a:	fa22 f303 	lsr.w	r3, r2, r3
 800069e:	b2db      	uxtb	r3, r3
 80006a0:	f003 0301 	and.w	r3, r3, #1
 80006a4:	73fb      	strb	r3, [r7, #15]
	return value;
 80006a6:	7bfb      	ldrb	r3, [r7, #15]
}
 80006a8:	4618      	mov	r0, r3
 80006aa:	3714      	adds	r7, #20
 80006ac:	46bd      	mov	sp, r7
 80006ae:	bc80      	pop	{r7}
 80006b0:	4770      	bx	lr

080006b2 <GPIO_ToggleOutputPin>:
 *
 * @retrun			- none
 *
 * @Note			- none
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 80006b2:	b480      	push	{r7}
 80006b4:	b083      	sub	sp, #12
 80006b6:	af00      	add	r7, sp, #0
 80006b8:	6078      	str	r0, [r7, #4]
 80006ba:	460b      	mov	r3, r1
 80006bc:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	695b      	ldr	r3, [r3, #20]
 80006c2:	78fa      	ldrb	r2, [r7, #3]
 80006c4:	2101      	movs	r1, #1
 80006c6:	fa01 f202 	lsl.w	r2, r1, r2
 80006ca:	405a      	eors	r2, r3
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	615a      	str	r2, [r3, #20]
}
 80006d0:	bf00      	nop
 80006d2:	370c      	adds	r7, #12
 80006d4:	46bd      	mov	sp, r7
 80006d6:	bc80      	pop	{r7}
 80006d8:	4770      	bx	lr
	...

080006dc <delay>:

#include "stm32l476xx.h"

#define BTN_PRESSED DISABLE

void delay() {
 80006dc:	b480      	push	{r7}
 80006de:	b083      	sub	sp, #12
 80006e0:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000/2; i++);
 80006e2:	2300      	movs	r3, #0
 80006e4:	607b      	str	r3, [r7, #4]
 80006e6:	e002      	b.n	80006ee <delay+0x12>
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	3301      	adds	r3, #1
 80006ec:	607b      	str	r3, [r7, #4]
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	4a04      	ldr	r2, [pc, #16]	@ (8000704 <delay+0x28>)
 80006f2:	4293      	cmp	r3, r2
 80006f4:	d9f8      	bls.n	80006e8 <delay+0xc>
}
 80006f6:	bf00      	nop
 80006f8:	bf00      	nop
 80006fa:	370c      	adds	r7, #12
 80006fc:	46bd      	mov	sp, r7
 80006fe:	bc80      	pop	{r7}
 8000700:	4770      	bx	lr
 8000702:	bf00      	nop
 8000704:	0003d08f 	.word	0x0003d08f

08000708 <main>:

int main(void) {
 8000708:	b580      	push	{r7, lr}
 800070a:	b086      	sub	sp, #24
 800070c:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLed;

	GPIOLed.pGPIOx = GPIOA;
 800070e:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000712:	60fb      	str	r3, [r7, #12]
	GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
 8000714:	2306      	movs	r3, #6
 8000716:	743b      	strb	r3, [r7, #16]
	GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000718:	2301      	movs	r3, #1
 800071a:	747b      	strb	r3, [r7, #17]
	GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800071c:	2302      	movs	r3, #2
 800071e:	74bb      	strb	r3, [r7, #18]
	GPIOLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP; 	// you can also use GPIO_OP_TYPE_OD to Open drain output but you need to use external pull up resistor
 8000720:	2300      	movs	r3, #0
 8000722:	753b      	strb	r3, [r7, #20]
	GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000724:	2300      	movs	r3, #0
 8000726:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000728:	2101      	movs	r1, #1
 800072a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800072e:	f7ff fd4d 	bl	80001cc <GPIO_PeriClockControl>
	GPIO_Init(&GPIOLed);
 8000732:	f107 030c 	add.w	r3, r7, #12
 8000736:	4618      	mov	r0, r3
 8000738:	f7ff fe16 	bl	8000368 <GPIO_Init>

	GPIO_Handle_t GPIOButton;

	GPIOButton.pGPIOx = GPIOA;
 800073c:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000740:	603b      	str	r3, [r7, #0]
	GPIOButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 8000742:	2307      	movs	r3, #7
 8000744:	713b      	strb	r3, [r7, #4]
	GPIOButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000746:	2300      	movs	r3, #0
 8000748:	717b      	strb	r3, [r7, #5]
	GPIOButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800074a:	2302      	movs	r3, #2
 800074c:	71bb      	strb	r3, [r7, #6]
	GPIOButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800074e:	2301      	movs	r3, #1
 8000750:	71fb      	strb	r3, [r7, #7]

	//GPIO_PeriClockControl(GPIOA, ENABLE);
	GPIO_Init(&GPIOButton);
 8000752:	463b      	mov	r3, r7
 8000754:	4618      	mov	r0, r3
 8000756:	f7ff fe07 	bl	8000368 <GPIO_Init>

	while(1) {
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_7) == BTN_PRESSED) {
 800075a:	2107      	movs	r1, #7
 800075c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000760:	f7ff ff92 	bl	8000688 <GPIO_ReadFromInputPin>
 8000764:	4603      	mov	r3, r0
 8000766:	2b00      	cmp	r3, #0
 8000768:	d1f7      	bne.n	800075a <main+0x52>
			delay();
 800076a:	f7ff ffb7 	bl	80006dc <delay>
			GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_6);
 800076e:	2106      	movs	r1, #6
 8000770:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000774:	f7ff ff9d 	bl	80006b2 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_7) == BTN_PRESSED) {
 8000778:	e7ef      	b.n	800075a <main+0x52>
	...

0800077c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800077c:	480d      	ldr	r0, [pc, #52]	@ (80007b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800077e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000780:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000784:	480c      	ldr	r0, [pc, #48]	@ (80007b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000786:	490d      	ldr	r1, [pc, #52]	@ (80007bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000788:	4a0d      	ldr	r2, [pc, #52]	@ (80007c0 <LoopForever+0xe>)
  movs r3, #0
 800078a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800078c:	e002      	b.n	8000794 <LoopCopyDataInit>

0800078e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800078e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000790:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000792:	3304      	adds	r3, #4

08000794 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000794:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000796:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000798:	d3f9      	bcc.n	800078e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800079a:	4a0a      	ldr	r2, [pc, #40]	@ (80007c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800079c:	4c0a      	ldr	r4, [pc, #40]	@ (80007c8 <LoopForever+0x16>)
  movs r3, #0
 800079e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007a0:	e001      	b.n	80007a6 <LoopFillZerobss>

080007a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007a4:	3204      	adds	r2, #4

080007a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007a8:	d3fb      	bcc.n	80007a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007aa:	f000 f811 	bl	80007d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007ae:	f7ff ffab 	bl	8000708 <main>

080007b2 <LoopForever>:

LoopForever:
  b LoopForever
 80007b2:	e7fe      	b.n	80007b2 <LoopForever>
  ldr   r0, =_estack
 80007b4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80007b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007c0:	08000838 	.word	0x08000838
  ldr r2, =_sbss
 80007c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007c8:	2000001c 	.word	0x2000001c

080007cc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007cc:	e7fe      	b.n	80007cc <ADC1_2_IRQHandler>
	...

080007d0 <__libc_init_array>:
 80007d0:	b570      	push	{r4, r5, r6, lr}
 80007d2:	4d0d      	ldr	r5, [pc, #52]	@ (8000808 <__libc_init_array+0x38>)
 80007d4:	4c0d      	ldr	r4, [pc, #52]	@ (800080c <__libc_init_array+0x3c>)
 80007d6:	1b64      	subs	r4, r4, r5
 80007d8:	10a4      	asrs	r4, r4, #2
 80007da:	2600      	movs	r6, #0
 80007dc:	42a6      	cmp	r6, r4
 80007de:	d109      	bne.n	80007f4 <__libc_init_array+0x24>
 80007e0:	4d0b      	ldr	r5, [pc, #44]	@ (8000810 <__libc_init_array+0x40>)
 80007e2:	4c0c      	ldr	r4, [pc, #48]	@ (8000814 <__libc_init_array+0x44>)
 80007e4:	f000 f818 	bl	8000818 <_init>
 80007e8:	1b64      	subs	r4, r4, r5
 80007ea:	10a4      	asrs	r4, r4, #2
 80007ec:	2600      	movs	r6, #0
 80007ee:	42a6      	cmp	r6, r4
 80007f0:	d105      	bne.n	80007fe <__libc_init_array+0x2e>
 80007f2:	bd70      	pop	{r4, r5, r6, pc}
 80007f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007f8:	4798      	blx	r3
 80007fa:	3601      	adds	r6, #1
 80007fc:	e7ee      	b.n	80007dc <__libc_init_array+0xc>
 80007fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000802:	4798      	blx	r3
 8000804:	3601      	adds	r6, #1
 8000806:	e7f2      	b.n	80007ee <__libc_init_array+0x1e>
 8000808:	08000830 	.word	0x08000830
 800080c:	08000830 	.word	0x08000830
 8000810:	08000830 	.word	0x08000830
 8000814:	08000834 	.word	0x08000834

08000818 <_init>:
 8000818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800081a:	bf00      	nop
 800081c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800081e:	bc08      	pop	{r3}
 8000820:	469e      	mov	lr, r3
 8000822:	4770      	bx	lr

08000824 <_fini>:
 8000824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000826:	bf00      	nop
 8000828:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800082a:	bc08      	pop	{r3}
 800082c:	469e      	mov	lr, r3
 800082e:	4770      	bx	lr
